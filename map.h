#ifndef MAP_INCLUDED
#define MAP_INCLUDED

#include <Arduino.h>

#define MAX_MAP_SIZE 200 // in bytes, corresponds to a 25 rooms

struct Level {
  int width;
  int height;
  int startRoom;
  byte dungeonMap[MAX_MAP_SIZE];
};


const Level dungeon1 = {3, 3, 0,              
                            { B11111111,      
                              B10000001,      
                              B10000001,      
                              B10000001,      
                              B10000001,      
                              B10000001,      
                              B10000001,      
                              B11111111,
                              
                              B11111111,
                              B11100001,               
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11110001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111101,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111111,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111111,
                              B11000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111111,
                              B11100001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111111,
                              B11110001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111,
                              
                              B11111111,
                              B11111111,
                              B11111111,
                              B10000001,
                              B10000001,
                              B10000001,
                              B10000001,
                              B11111111 } };
                              
#endif                              
